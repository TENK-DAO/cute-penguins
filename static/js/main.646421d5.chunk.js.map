{"version":3,"sources":["config.js","utils/near-utils.js","state/near.js","state/app.js","utils/state-utils.js","components/RenderRoutes/RouteWithSubRoutes/RouteWithSubRoutes.js","components/ScrollToTop/ScrollToTop.jsx","components/RenderRoutes/RenderRoutes.js","hooks/useTransfer.js","layouts/Modal/Modal.jsx","components/Navigation/Navigation.js","assets/images/social-face.svg","assets/images/social-twitter.svg","components/SocialLinks/SocialLinks.jsx","components/ConnectWalletBtn/ConnectWalletBtn.jsx","components/Loader/Loader.js","layouts/Header/Header.js","assets/images/footer-near-logo.svg","layouts/Footer/Footer.js","layouts/Layout/Layout.js","components/BuyMoreBtn/BuyMoreBtn.jsx","components/Generate/GenerateSoldOut.jsx","components/GenerateCountBtn/GenerateCountBtn.jsx","hooks/useMintNft.js","hooks/useLinkDrop.js","hooks/useBuy.js","components/Generate/GenerateBlock.jsx","components/Generate/Generate.jsx","pages/Home/Home.js","components/Price/Price.jsx","components/Buy/BuyMore/CountAndPrice.jsx","components/Buy/BuyMore/BuyMore.jsx","components/Buy/Buy.jsx","components/NoNfts/NoNfts.jsx","assets/images/link-drop-background.svg","hooks/useCopyToClipboard.js","assets/images/copy-icon.svg","pages/LinkDrop/ShareableLink/ShareableLink.jsx","pages/LinkDrop/ShareableInput/ShareableInput.jsx","pages/LinkDrop/ShareableCircle/ShareableCircle.jsx","pages/LinkDrop/SaveBtn/SaveBtn.jsx","pages/LinkDrop/LinkDrop.js","assets/images/rarity-common.svg","components/NftItemInfo/NftItemInfo.js","assets/images/rarity-rare.svg","assets/images/rarity-uncommon.svg","assets/images/rarity-very-rare.svg","assets/images/rarity-super-rare.svg","pages/MyNFTS/Reveal.jsx","components/NftItem/NftItem.js","components/NftList/NftList.js","pages/MyNFTS/MyNFTS.js","routes.js","Main.js","index.js"],"names":["contractName","process","REACT_APP_CONTRACT_NAME","getConfig","config","networkId","nodeUrl","walletUrl","helperUrl","GAS","DEFAULT_NEW_ACCOUNT_AMOUNT","contractMethods","changeMethods","viewMethods","nearAPI","format","formatNearAmount","getWallet","parseNearAmount","a","deps","keyStore","BrowserLocalStorageKeyStore","near","wallet","getContract","account","methods","sender","accountId","getPrice","loadContract","contract","minter","Promise","all","discount","num","total_cost","token_storage_cost","cost_per_token","cost_of_linkdrop","tenTokenCost","tokenStorage","oneTokenCost","costLinkDrop","discountFormat","tenTokenFormat","oneTokenFormat","tokenStorageFormat","price","oneNFT","manyNFTS","linkmatcher","getPublicKey","link","m","match","groups","key","KeyPairEd25519","fromString","initialState","prefix","updatedState","getState","store","createContext","InnerProvider","Provider","updateState","state","newState","path","length","pathArr","split","first","Array","isArray","slice","join","children","useReducer","_state","payload","undefined","dispatch","update","value","wrappedDispatch","fn","substr","toUpperCase","StateUtils","app","soldOut","oneCount","manyCount","revealMisfits","JSON","parse","localStorage","getItem","misfitsArray","linkDropArray","urlIpfs","tokensLeft","modalOpen","initialized","appStore","AppProvider","RouteWithSubRoutes","route","exact","routes","render","props","component","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","RenderRoutes","map","to","useTransfer","history","useHistory","useContext","nftTransfer","tokenId","receiver_id","token_id","toString","console","log","nft_transfer","args","amount","push","nft","Modal","useState","data","setData","correctNft","setCorrectNft","document","addEventListener","escFunction","removeEventListener","useCallback","event","keyCode","handleChange","target","name","trim","toLowerCase","x","className","onChange","placeholder","type","onClick","Number","includes","isNaN","some","item","Navigation","signedIn","defaultProps","SocialLinks","href","rel","srcSet","src","alt","socialFace","socialTwitter","ConnectWalletBtn","handleClick","text","Loader","Header","signOut","signIn","memo","Footer","logo","Layout","hash","setTimeout","querySelector","scrollIntoView","behavior","body","style","overflow","BuyMoreBtn","GenerateSoldOut","haveNft","showSendNft","Boolean","GenerateCountBtn","count","isActive","classCount","classActive","useMintNft","mintNft","callbackUrl","location","origin","nft_mint_one","gas","nft_mint_many","useLinkDrop","contractId","url","createLinkDrop","keyPair","fromRandom","currentUrl","secretKey","setItem","stringify","id","isUsed","cost","publicKey","create_linkdrop","public_key","useBuy","isLinkDrop","setCount","showMessage","setShowMessage","showCountAnimation","setShowCountAnimation","formatPrice","formatedPrice","forEach","index","arr","endIndex","handleNumberClick","number","GenerateBlock","successUrl","Generate","Home","Price","CountAndPrice","activeCount","showAnimation","currentCount","BuyMore","moreThenManyCount","textForMessage","transform","Buy","NoNfts","useCopyToClipboard","handleCopy","el","createElement","setAttribute","position","left","appendChild","select","execCommand","removeChild","ShareableLink","animation","setAnimation","copyIcon","ShareableInput","onBlur","setValue","e","ShareableCircle","activeLinkForShare","SaveBtn","uri","encodeURI","hrefSaveBtn","download","LinkDrop","setLinkDropArray","activeIndex","setActiveIndex","undefined_wallet_auth_key","handleBlur","dataIndex","dataset","updatedLinkDropArray","handleCircleClick","background","NftItemInfo","info","nftInfo","useRef","right","current","getBoundingClientRect","innerWidth","width","ref","media","title","padStart","rarity","kind","seed","Reveal","Normies","Skellies","Zombies","Meerkats","Glitches","NftItem","isReveal","reveal","setReveal","setInfo","fetch","reference","response","json","NftList","newRevealMisfits","metadata","MyNFTS","nftsCount","Main","requestSignIn","call","removeItem","isSignedIn","clear","getAccountBalance","available","balance","tokens_left","nft_total_supply","nft_tokens_for_owner","account_id","nft_metadata","check_key","nftTotalSupply","base_uri","filter","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.646421d5.chunk.js","sourcesContent":["const contractName = process.env.REACT_APP_CONTRACT_NAME || 'cutepenguinclub.tenk.near';\n\n\nexport default function getConfig() {\n  let config = {\n    networkId: 'testnet',\n    nodeUrl: 'https://rpc.testnet.near.org',\n    walletUrl: 'https://wallet.testnet.near.org',\n    helperUrl: 'https://helper.testnet.near.org',\n    contractName,\n    GAS: '200000000000000',\n    DEFAULT_NEW_ACCOUNT_AMOUNT: '5',\n    contractMethods: {\n      changeMethods: [\n        'nft_mint_one',\n        'nft_mint_many',\n        'create_linkdrop',\n        'nft_transfer',\n      ],\n      viewMethods: [\n        'cost_per_token',\n        'discount',\n        'token_storage_cost',\n        'total_cost',\n        'nft_supply_for_owner',\n        'nft_total_supply',\n        'nft_tokens',\n        'nft_tokens_for_owner',\n        'tokens_left',\n        'cost_of_linkdrop',\n        'nft_metadata',\n        'get_key_balance',\n        'check_key',\n      ],\n    },\n  };\n\n  // if (process.env.REACT_APP_ENV === 'prod') {\n  config = {\n    ...config,\n    networkId: 'mainnet',\n    nodeUrl: 'https://rpc.mainnet.near.org',\n    walletUrl: 'https://wallet.near.org',\n    helperUrl: 'https://helper.mainnet.near.org',\n  };\n  // }\n\n  return config;\n}\n","/* eslint-disable */\nimport * as nearAPI from 'near-api-js';\nimport getConfig from '../config';\n\nexport const { networkId, nodeUrl, walletUrl, contractName, contractMethods } =\n  getConfig();\n\nexport const {\n  utils: {\n    format: { formatNearAmount, parseNearAmount },\n  },\n} = nearAPI;\n\nexport const formatAccountId = (accountId, len = 16) => {\n  if (accountId.length > len) {\n    return `${accountId.substr(0, len - 3)}...`;\n  }\n  return accountId;\n};\n\nexport const getWallet = async () => {\n  const near = await nearAPI.connect({\n    networkId,\n    nodeUrl,\n    walletUrl,\n    deps: { keyStore: new nearAPI.keyStores.BrowserLocalStorageKeyStore() },\n  });\n  const wallet = new nearAPI.WalletAccount(near);\n  return { near, wallet };\n};\n\nexport const getContract = (account, methods = contractMethods) => {\n  return new nearAPI.Contract(account, contractName, {\n    ...methods,\n    sender: account.accountId,\n  });\n};\n\nexport const getPrice = async (near) => {\n  const contract = await near.loadContract(contractName, {\n    ...contractMethods,\n  });\n\n  let minter = \"aa.near\";\n\n  let [discount, tenTokenCost, tokenStorage, oneTokenCost, costLinkDrop] =\n    await Promise.all([\n      contract.discount({\n        num: 10,\n        minter\n      }),\n      contract.total_cost({ num: 10, minter }),\n      contract.token_storage_cost({}),\n      contract.cost_per_token({ num: 1, minter }),\n      contract.cost_of_linkdrop({minter}),\n    ]);\n\n  const discountFormat = formatNearAmount(discount);\n  const tenTokenFormat = formatNearAmount(tenTokenCost);\n  const oneTokenFormat = formatNearAmount(oneTokenCost);\n  const tokenStorageFormat = formatNearAmount(tokenStorage);\n\n  const price = {\n    oneNFT: oneTokenFormat - tokenStorageFormat,\n    manyNFTS: tenTokenFormat - 10 * tokenStorageFormat,\n    tokenStorageFormat,\n    discountFormat,\n    tenTokenCost,\n    oneTokenCost,\n    costLinkDrop: costLinkDrop,\n  };\n\n  return price;\n};\n","/* eslint-disable */\nimport getConfig from '../config';\nimport * as nearAPI from 'near-api-js';\nimport { getWallet, getContract, getPrice } from '../utils/near-utils';\nimport { KeyPairEd25519 } from 'near-api-js/lib/utils';\n\nexport const {\n  networkId,\n  nodeUrl,\n  walletUrl,\n  GAS,\n  contractName,\n  contractMethods,\n} = getConfig();\n\nexport const {\n  utils: {\n    format: { formatNearAmount, parseNearAmount },\n  },\n} = nearAPI;\n\nconst linkmatcher =\n  /https:\\/\\/wallet.near.org\\/linkdrop\\/[^/]+\\/(?<key>.+)\\?redirectUrl=/;\n\nfunction getPublicKey(link) {\n  const m = link.match(linkmatcher).groups.key;\n  return KeyPairEd25519.fromString(m).getPublicKey();\n}\n\nexport const initNear =\n  () =>\n  async ({ update, getState }) => {\n    try {\n      const { near, wallet } = await getWallet();\n\n      const price = await getPrice(near);\n\n      wallet.signIn = (successUrl) => {\n        wallet.requestSignIn({\n          successUrl,\n          contractId: contractName,\n        });\n      };\n\n      const signOut = wallet.signOut;\n      wallet.signOut = () => {\n        signOut.call(wallet);\n        update('wallet.signedIn', false);\n        update('', { account: null });\n        localStorage.removeItem('undefined_wallet_auth_key');\n        wallet.signedIn = wallet.isSignedIn();\n        new nearAPI.keyStores.BrowserLocalStorageKeyStore().clear();\n      };\n\n      wallet.signedIn = wallet.isSignedIn();\n\n      let account;\n      if (wallet.signedIn) {\n        account = wallet.account();\n        const contract = getContract(account, contractMethods);\n\n        wallet.balance = formatNearAmount(\n          (await wallet.account().getAccountBalance()).available,\n          2,\n        );\n\n        await update('', { wallet, account, contract, price, near });\n\n        // take lindDropArray from Local Storage for only that user that connect with near wallet\n        let linkDropArray =\n          JSON.parse(\n            localStorage.getItem(`linkDropArray:${account.accountId}`),\n          ) || [];\n\n        // tokensLeft - count of how many tokens left\n        // misfitsArray - NFTs of user\n        // {base_uri: urlIpfs} take url for IPFS where NFTs and data stored\n        // linkDropArray.map - check is somebody claim your link drop or not\n\n        const [\n          tokensLeft,\n          nftTotalSupply,\n          misfitsArray,\n          { base_uri: urlIpfs },\n        ] = await Promise.all([\n          contract.tokens_left(),\n          contract.nft_total_supply(),\n          contract.nft_tokens_for_owner({\n            account_id: account.accountId,\n          }),\n          contract.nft_metadata(),\n          ...linkDropArray.map(async (link) => {\n            const public_key = getPublicKey(link.link).toString();\n            link.isUsed = !(await contract.check_key({ public_key }));\n          }),\n        ]);\n\n        // if all tokens buy soldOut will be true\n        const soldOut = tokensLeft === 0;\n\n        // filter linkDrops that was used\n        linkDropArray = linkDropArray.filter(({ isUsed }) => !isUsed);\n\n        // update LocalStorage\n        localStorage.setItem(\n          `linkDropArray:${account.accountId}`,\n          JSON.stringify([...linkDropArray]),\n        );\n\n        const state = getState();\n        const app = {\n          ...state.app,\n          misfitsArray,\n          urlIpfs,\n          linkDropArray,\n          soldOut,\n          tokensLeft,\n        };\n\n        await update('', { app });\n\n        // Debugging start\n        console.log('tokens_left:', tokensLeft);\n        console.log('nft_total_supply', nftTotalSupply);\n        console.log('state:', getState());\n        // Debugging end\n\n        return;\n      }\n\n      await update('', { near, wallet, account, price });\n      console.log('state:', getState());\n    } catch (e) {\n      console.log('error:', e);\n    }\n  };\n","import { StateUtils } from '../utils/state-utils';\nimport { initNear } from './near';\n\nconst initialState = {\n  app: {\n    soldOut: true,\n    oneCount: 1,\n    manyCount: 10,\n    revealMisfits: JSON.parse(localStorage.getItem('revealMisfits')) || {},\n    misfitsArray: [],\n    linkDropArray: [],\n    urlIpfs: '',\n    tokensLeft: undefined,\n    modalOpen: false,\n  },\n  near: {\n    initialized: false,\n  },\n  price: {\n    oneNFT: 5,\n    manyNFTS: 31.99,\n    tokenStorageFormat: 0,\n    discountFormat: 0,\n  },\n};\n\nexport const { appStore, AppProvider } = StateUtils(initialState, 'app');\n\nexport const onAppMount =\n  () =>\n  async ({ dispatch }) => {\n    dispatch(initNear());\n  };\n","/* eslint-disable */\nimport React, { createContext, useReducer } from 'react';\n\nexport const StateUtils = (initialState, prefix) => {\n  let updatedState;\n  const getState = () => updatedState;\n  const store = createContext(initialState);\n  const { Provider: InnerProvider } = store;\n\n  const updateState = (state, newState, path = '') => {\n    if (path.length === 0) {\n      return { ...state, ...newState };\n    }\n    const pathArr = path.split('.');\n    const first = pathArr[0];\n    state = { ...state };\n    if (!state[first]) {\n      state[first] = {};\n    }\n    if (pathArr.length === 1) {\n      state[first] =\n        !!newState && typeof newState === 'object' && !Array.isArray(newState)\n          ? {\n              ...state[first],\n              ...newState,\n            }\n          : newState;\n    } else {\n      state[first] = {\n        ...state[first],\n        ...updateState(state[first], newState, pathArr.slice(1).join('.')),\n      };\n    }\n\n    return state;\n  };\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer((_state, payload) => {\n      const { path, newState } = payload;\n      if (path === undefined) {\n        return _state;\n      }\n      updatedState = updateState(_state, newState, path);\n      return updatedState;\n    }, initialState);\n\n    const update = (path, newState) => {\n      dispatch({ path, newState });\n    };\n    const wrappedDispatch = (fn) =>\n      fn({ update, getState, dispatch: wrappedDispatch });\n\n    return (\n      <InnerProvider value={{ update, state, dispatch: wrappedDispatch }}>\n        {children}\n      </InnerProvider>\n    );\n  };\n\n  if (prefix) {\n    return {\n      [`${prefix}Store`]: store,\n      [`${prefix.substr(0, 1).toUpperCase() + prefix.substr(1)}Provider`]:\n        Provider,\n    };\n  }\n\n  return { store, Provider };\n};\n","import React from 'react';\nimport { Route } from 'react-router';\n\nexport const RouteWithSubRoutes = (route) => {\n  const { path, exact, routes } = route;\n  return (\n    <Route\n      path={path}\n      exact={exact}\n      render={(props) => <route.component {...props} routes={routes} />}\n    />\n  );\n};\n\nexport default RouteWithSubRoutes;\n","import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router';\n\nconst ScrollToTop = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n  return <></>;\n};\n\nexport default ScrollToTop;\n","import React from 'react';\nimport { Switch, Redirect } from 'react-router';\nimport PropTypes from 'prop-types';\nimport RouteWithSubRoutes from './RouteWithSubRoutes';\nimport ScrollToTop from '../ScrollToTop';\n\nconst RenderRoutes = ({ routes }) => (\n  <>\n    <Switch>\n      {routes.map((route) => (\n        <RouteWithSubRoutes key={route.key} {...route} />\n      ))}\n      <Redirect to=\"/\" />\n    </Switch>\n    <ScrollToTop />\n  </>\n);\n\nRenderRoutes.propTypes = {\n  routes: PropTypes.array,\n};\n\nexport default RenderRoutes;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\n/* eslint-disable no-alert */\n/* eslint-disable camelcase */\nimport { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { appStore } from '../state/app';\n\nconst useTransfer = () => {\n  const history = useHistory();\n\n  const { state } = useContext(appStore);\n\n  const { contract } = state;\n\n  const nftTransfer = async (tokenId, receiver_id) => {\n    const token_id = tokenId.toString();\n    console.log('transfer');\n\n    await contract.nft_transfer({\n      args: { receiver_id, token_id },\n      amount: '1',\n    });\n    history.push('/my-nfts');\n  };\n  return { nftTransfer };\n};\n\nexport default useTransfer;\n","/* eslint-disable */\n\nimport React, { useState, useContext, useEffect, useCallback } from 'react';\nimport useTransfer from '../../hooks/useTransfer';\nimport { appStore } from '../../state/app';\n\nconst initialState = {\n  nft: undefined,\n  account: '',\n};\nconst Modal = () => {\n  const { update, state } = useContext(appStore);\n  const { account, app } = state;\n\n  const { nftTransfer } = useTransfer();\n\n  const [data, setData] = useState(initialState);\n  const [correctNft, setCorrectNft] = useState(false);\n\n  useEffect(() => {\n    document.addEventListener('keydown', escFunction, false);\n\n    return () => {\n      document.removeEventListener('keydown', escFunction, false);\n    };\n  }, []);\n\n  const escFunction = useCallback((event) => {\n    if (event.keyCode === 27) {\n      update('app.modalOpen', false);\n    }\n  }, []);\n\n  const handleChange = ({ target }) => {\n    let { value } = target;\n\n    if (target.name === 'account') {\n      value = target.value.trim().toLowerCase();\n    }\n    setData((x) => ({ ...x, [target.name]: value }));\n  };\n\n  const handleModalClose = () => update('app.modalOpen', false);\n\n  const handleClick = () => {\n    const nft = Number(data.nft);\n\n    if (!correctNft) {\n      // you can send only that NFTs that you have.\n      // you can't send empty data\n      if (\n        data.nft === null ||\n        data.nft === undefined ||\n        Number.isNaN(data.nft) ||\n        data.nft === '' ||\n        data.nft > 1923 ||\n        !app.misfitsArray.some((item) => item.token_id == nft)\n      )\n        return;\n      setCorrectNft(true);\n    } else {\n      // can't send to itself\n      // account name must contain \".near\"\n      if (data.account === account.accountId || !data.account.includes('.near'))\n        return;\n\n      nftTransfer(nft, data.account);\n    }\n  };\n\n  return (\n    <div className=\"modal\">\n      <div className=\"modal__box\">\n        {!correctNft ? (\n          <>\n            <div className=\"modal__nft-id\">\n              NFT <span className=\"modal__nft-id-white\">ID</span>\n            </div>\n            <input\n              type=\"number\"\n              name=\"nft\"\n              onChange={handleChange}\n              value={data.nft}\n              className=\"modal__input\"\n              placeholder=\"Enter number of nft\"\n            />\n          </>\n        ) : (\n          <>\n            <div className=\"modal__nft-id\">\n              Account <span className=\"modal__nft-id-white\">name</span>\n            </div>\n            <input\n              name=\"account\"\n              onChange={handleChange}\n              value={data.account}\n              className=\"modal__input\"\n              placeholder=\"Enter account name recipient\"\n            />\n          </>\n        )}\n\n        <div className=\"modal__controls\">\n          <button\n            className=\"modal__close-btn\"\n            type=\"button\"\n            onClick={handleModalClose}\n          >\n            Cancel\n          </button>\n          <button\n            className=\"modal__send-btn\"\n            type=\"button\"\n            onClick={handleClick}\n          >\n            OK\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Navigation = ({ className, signedIn }) => (\n  <nav className={`navigation ${className || ''}`}>\n    <ul className=\"navigation__list\">\n      <li className=\"navigation__list-item\">\n        <Link to=\"/#generate\" className=\"navigation__link\">\n          Generate\n        </Link>\n      </li>\n      {signedIn && (\n        <>\n          <li className=\"navigation__list-item\">\n            <Link to=\"/my-nfts\" className=\"navigation__link\">\n              My NFTs\n            </Link>\n          </li>\n          <li className=\"navigation__list-item\">\n            <Link to=\"/link-drop\" className=\"navigation__link\">\n              LinkDrop\n            </Link>\n          </li>\n        </>\n      )}\n    </ul>\n  </nav>\n);\n\nNavigation.propTypes = {\n  className: PropTypes.string,\n  signedIn: PropTypes.bool,\n};\n\nNavigation.defaultProps = {\n  className: '',\n  signedIn: false,\n};\n\nexport default Navigation;\n","export default __webpack_public_path__ + \"static/media/social-face.1e1c5d3d.svg\";","export default __webpack_public_path__ + \"static/media/social-twitter.f8b88ebe.svg\";","import React from 'react';\nimport { ReactSVG } from 'react-svg';\nimport PropTypes from 'prop-types';\nimport socialFace from '../../assets/images/social-face.svg';\nimport socialTwitter from '../../assets/images/social-twitter.svg';\n\nconst SocialLinks = ({ className }) => (\n  <div className={`social-links ${className || ''}`}>\n    <a\n      href=\"https://paras.id/collection/cutepenguinclub.tenk.near\"\n      rel=\"noopener noreferrer\"\n      target=\"_blank\"\n    >\n      <picture>\n        <source srcSet=\"./images/social-paras-2x.webp 2x, ./images/social-paras.webp 1x\" />\n        <img\n          className=\"social-links__item\"\n          src=\"./images/social-paras.png\"\n          alt=\"paras\"\n        />\n      </picture>\n    </a>\n    <a\n      href=\"https://discord.com/invite/E9BguAWBTt\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <ReactSVG className=\"social-links__item\" src={socialFace} />\n    </a>\n    <a\n      href=\"https://twitter.com/NEARCollectible\"\n      rel=\"noopener noreferrer\"\n      target=\"_blank\"\n    >\n      <ReactSVG className=\"social-links__item\" src={socialTwitter} />\n    </a>\n  </div>\n);\n\nSocialLinks.propTypes = {\n  className: PropTypes.string,\n};\n\nSocialLinks.defaultProps = {\n  className: '',\n};\n\nexport default SocialLinks;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ConnectWalletBtn = ({ handleClick, text }) => (\n  <button className=\"connect-wallet\" type=\"button\" onClick={handleClick}>\n    {text ? (\n      <p className=\"connect-wallet__text connect-wallet__text-name\">{text}</p>\n    ) : (\n      <p className=\"connect-wallet__text\">Connect Wallet</p>\n    )}\n  </button>\n);\n\nConnectWalletBtn.propTypes = {\n  handleClick: PropTypes.func,\n  text: PropTypes.string,\n};\n\nexport default ConnectWalletBtn;\n","import React from 'react';\n\nconst Loader = () => (\n  <div className=\"lds-ring\">\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n);\n\nexport default Loader;\n","import React, { useContext, memo } from 'react';\nimport { appStore } from '../../state/app';\nimport Navigation from '../../components/Navigation';\nimport SocialLinks from '../../components/SocialLinks';\nimport ConnectWalletBtn from '../../components/ConnectWalletBtn';\nimport Loader from '../../components/Loader/Loader';\n\nconst Header = () => {\n  const { state } = useContext(appStore);\n  const { wallet, account } = state;\n\n  if (!wallet) {\n    return <Loader />;\n  }\n\n  return (\n    <header className=\"header\">\n      <Navigation className=\"header__navigation\" signedIn={wallet.signedIn} />\n      <SocialLinks className=\"header__social\" />\n      {account?.accountId ? (\n        <ConnectWalletBtn\n          text={account.accountId}\n          handleClick={() => wallet.signOut()}\n        />\n      ) : (\n        <ConnectWalletBtn handleClick={() => wallet.signIn()} />\n      )}\n    </header>\n  );\n};\n\nexport default memo(Header);\n","export default __webpack_public_path__ + \"static/media/footer-near-logo.2d4a6e76.svg\";","import React, { useContext, memo } from 'react';\nimport { ReactSVG } from 'react-svg';\nimport { appStore } from '../../state/app';\nimport Navigation from '../../components/Navigation';\nimport SocialLinks from '../../components/SocialLinks';\nimport logo from '../../assets/images/footer-near-logo.svg';\n\nconst Footer = () => {\n  const { state } = useContext(appStore);\n  const { wallet } = state || {};\n\n  return wallet ? (\n    <footer className=\"footer\">\n      <div className=\"footer__container\">\n        <Navigation className=\"footer__navigation\" signedIn={wallet.signedIn} />\n        <SocialLinks className=\"footer__social\" />\n\n        <p className=\"footer__built\">Built on</p>\n        <ReactSVG className=\"footer__logo\" src={logo} />\n\n        <p className=\"footer__text\">\n          NEAR Collectibles NFTs are built on top of NEAR Protocol, where minting\n          NFTs cost less than a cent per item.\n        </p>\n        <p className=\"footer__copyright \">\n          © 2022 NEAR Collectibles. All Rights Reserved.\n        </p>        \n        <a\n          href=\"https://tenkbay.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <p className=\"footer__tenkbay \">\n            Powered by Tenk Bay and Open Source Code.\n          </p>\n        </a>\n\n      </div>\n    </footer>\n  ) : (\n    <></>\n  );\n};\n\nexport default memo(Footer);\n","import React, { useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation, useHistory } from 'react-router';\nimport { appStore } from '../../state/app';\nimport Modal from '../Modal';\nimport Header from '../Header';\nimport Footer from '../Footer';\n\nconst Layout = ({ children }) => {\n  const { pathname, hash } = useLocation();\n  const history = useHistory();\n\n  const { state } = useContext(appStore);\n  const { modalOpen } = state.app;\n\n  useEffect(() => {\n    if (!hash) return;\n\n    setTimeout(() => {\n      const elem = document.querySelector(hash);\n\n      elem.scrollIntoView({\n        behavior: 'smooth',\n      });\n    }, 100);\n\n    if (hash !== '#generate-block') history.push(pathname);\n  }, [hash]);\n\n  // hide scroll when modal open\n  if (modalOpen) {\n    document.body.style.overflow = 'hidden';\n  } else {\n    document.body.style.overflow = '';\n  }\n\n  return (\n    <>\n      <Header />\n      {children}\n      <Footer />\n      {modalOpen && <Modal />}\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.element,\n};\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BuyMoreBtn = ({ className, text, onClick }) => (\n  <button\n    type=\"button\"\n    className={`buy-more-btn ${className || ''}`}\n    onClick={onClick}\n  >\n    {text}\n  </button>\n);\n\nBuyMoreBtn.propTypes = {\n  className: PropTypes.string,\n  text: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nBuyMoreBtn.defaultProps = {\n  onClick: () => {},\n};\n\nexport default BuyMoreBtn;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { appStore } from '../../state/app';\nimport BuyMoreBtn from '../BuyMoreBtn';\n\nconst GenerateSoldOut = ({ className }) => {\n  const { state, update } = useContext(appStore);\n  const { account, app } = state;\n\n  const haveNft = app.misfitsArray.length;\n  const showSendNft = Boolean(account && haveNft);\n\n  const modalOpen = () => update('app.modalOpen', true);\n\n  return (\n    <div className={`generate-sold-out ${className || ''}`}>\n      <a\n        className=\"generate-sold-out__link\"\n        href=\"https://paras.id/collection/cutepenguinclub.tenk.near\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <p>Buy on Paras</p>\n        <picture>\n          <source srcSet=\"./images/generate-paras-2x.webp 2x, ./images/generate-paras.webp 1x\" />\n          <img\n            src=\"./images/generate-paras.png\"\n            alt=\"paras marketplace icon\"\n            className=\"generate-sold-out__img\"\n          ></img>\n        </picture>\n      </a>\n      {showSendNft && (\n        <BuyMoreBtn\n          text=\"Send an NFT\"\n          className=\"buy__nft\"\n          onClick={modalOpen}\n        />\n      )}\n    </div>\n  );\n};\nGenerateSoldOut.propTypes = {\n  className: PropTypes.string,\n};\n\nGenerateSoldOut.defaultProps = {\n  className: '',\n};\n\nexport default GenerateSoldOut;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst GenerateCountBtn = ({ count, isActive, onClick, className }) => {\n  const classCount = count > 1 ? 'generate-count-btn__many' : '';\n  const classActive = isActive ? 'generate-count-btn__active' : '';\n\n  return (\n    <button\n      type=\"button\"\n      onClick={onClick}\n      className={`generate-count-btn ${classCount} ${classActive} ${className}`}\n    >\n      <p>Buy {count}</p>\n    </button>\n  );\n};\n\nGenerateCountBtn.propTypes = {\n  count: PropTypes.number,\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n  isActive: PropTypes.bool,\n};\n\nGenerateCountBtn.defaultProps = {\n  count: 1,\n  onClick: () => {},\n  className: '',\n  isActive: false,\n};\n\nexport default GenerateCountBtn;\n","/* eslint-disable no-alert */\nimport { useContext } from 'react';\nimport { appStore } from '../state/app';\n\nconst useMintNft = () => {\n  const { state } = useContext(appStore);\n  const { contract, price } = state;\n\n  const mintNft = async (count = 1) => {\n    const callbackUrl = `${window.location.origin}/my-nfts`;\n    if (count === 1) {\n      contract.nft_mint_one({\n        args: {},\n        gas: '50000000000000',\n        amount: price.oneTokenCost,\n        callbackUrl,\n      });\n    } else {\n      contract.nft_mint_many({\n        args: { num: count },\n        gas: '230000000000000',\n        amount: price.tenTokenCost,\n        callbackUrl,\n      });\n    }\n  };\n\n  return { mintNft };\n};\n\nexport default useMintNft;\n","/* eslint-disable no-console */\nimport { useContext } from 'react';\nimport { generate as id } from 'shortid';\nimport { KeyPairEd25519 } from 'near-api-js/lib/utils';\nimport { GAS } from '../state/near';\nimport { appStore } from '../state/app';\n\nconst useLinkDrop = () => {\n  const { state } = useContext(appStore);\n  const { contract, account, app, price } = state;\n\n  const walletUrl = (contractId, key, url) =>\n    `https://wallet.near.org/linkdrop/${contractId}/${key}?redirectUrl=${url}/my-nfts`;\n\n  const createLinkDrop = async () => {\n    const keyPair = KeyPairEd25519.fromRandom();\n    const currentUrl = window.location.origin;\n    const url = walletUrl(\n      contract.contractId,\n      keyPair.secretKey.toString(),\n      currentUrl,\n    );\n\n    const { linkDropArray } = app;\n\n    localStorage.setItem(\n      `linkDropArray:${account.accountId}`,\n      JSON.stringify([\n        ...linkDropArray,\n        {\n          link: url,\n          text: '',\n          id: id(),\n          isUsed: false,\n        },\n      ]),\n    );\n\n    const cost = price.costLinkDrop;\n\n    const publicKey = keyPair.getPublicKey().toString();\n\n    try {\n      await contract.create_linkdrop({\n        args: { public_key: publicKey },\n        gas: GAS,\n        amount: cost,\n        callbackUrl: `${currentUrl}/link-drop`,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return { createLinkDrop };\n};\n\nexport default useLinkDrop;\n","import { useState, useEffect, useContext } from 'react';\nimport useMintNft from './useMintNft';\nimport useLinkDrop from './useLinkDrop';\nimport { appStore } from '../state/app';\n\nconst useBuy = (isLinkDrop) => {\n  const { state } = useContext(appStore);\n\n  const { mintNft } = useMintNft();\n  const { createLinkDrop } = useLinkDrop();\n\n  const text = isLinkDrop ? 'Generate gift links' : 'Buy';\n\n  const [count, setCount] = useState();\n  const [showMessage, setShowMessage] = useState(false);\n  const [showCountAnimation, setShowCountAnimation] = useState('');\n\n  useEffect(() => {\n    if (showMessage) {\n      setTimeout(() => {\n        setShowMessage(false);\n      }, 3000);\n    }\n    return undefined;\n  }, [showMessage]);\n\n  const handleClick = async () => {\n    if (!count) {\n      setShowMessage(true);\n    } else {\n      // eslint-disable-next-line no-unused-expressions\n      isLinkDrop ? createLinkDrop(count) : mintNft(count);\n    }\n  };\n\n  const formatPrice = (price) => {\n    const arrayFromPrice = price.toString().split('');\n    let formatedPrice = arrayFromPrice.join('');\n\n    price\n      .toString()\n      .split('')\n      .forEach((item, index, arr) => {\n        if (item === '.') {\n          const endIndex = index + 2 >= arr.length ? index + 2 : index + 3;\n          formatedPrice = arr.slice(0, endIndex).join('');\n        }\n      });\n\n    return formatedPrice;\n  };\n\n  const handleNumberClick = (number) => {\n    if (count === number) {\n      return;\n    }\n\n    setCount(number);\n    setShowCountAnimation('generate-block__animation-hide');\n\n    setTimeout(\n      () => setShowCountAnimation('generate-block__animation-price'),\n      0,\n    );\n  };\n\n  return {\n    text,\n    count,\n    state,\n    showMessage,\n    setShowMessage,\n    showCountAnimation,\n    formatPrice,\n    handleClick,\n    handleNumberClick,\n  };\n};\n\nexport default useBuy;\n","import React, { memo } from 'react';\nimport GenerateCountBtn from '../GenerateCountBtn';\nimport useBuy from '../../hooks/useBuy';\nimport useMintNft from '../../hooks/useMintNft';\n\nconst GenerateBlock = () => {\n  const { mintNft } = useMintNft();\n\n  const {\n    count,\n    state,\n    showCountAnimation,\n    formatPrice,\n    handleNumberClick,\n  } = useBuy();\n\n  const { wallet, price, app } = state;\n\n  const handleClick = () => {\n    if (!wallet.signedIn) {\n      const successUrl = `${window.location.origin}/#generate-block`;\n      wallet.signIn(successUrl);\n    } else {\n      mintNft(count);\n    }\n  };\n\n  return (\n    <div id=\"generate-block\" className=\"generate-block\">\n      \n      <div className=\"generate-block__line\"></div>\n      <div className=\"generate-block__vertical-line \"></div>\n      <div className=\"generate-block__price \">\n        \n        <span className=\"generate-block__near\">Ⓝ&nbsp;</span>\n\n        <p className={`generate-block__count  ${showCountAnimation}`}>\n          {count === app.manyCount\n            ? formatPrice(price.manyNFTS)\n            : formatPrice(price.oneNFT)}\n        </p>\n      </div>\n      \n      <GenerateCountBtn\n        count={app.oneCount}\n        onClick={() => {handleNumberClick(app.oneCount);handleClick()}}\n        isActive={count === app.oneCount}\n      />\n      <h2>Tokens Left {app.tokensLeft}</h2>\n      {/* Show this block only for NFT and only if tokens left more or equal manyCount ( 10 in our case ) */}\n    </div>\n  );\n};\nexport default memo(GenerateBlock);\n","import React, { useContext } from 'react';\nimport GenerateSoldOut from './GenerateSoldOut';\nimport GenerateBlock from './GenerateBlock';\nimport { appStore } from '../../state/app';\nimport useBuy from '../../hooks/useBuy';\n\nconst Generate = () => {\n  const { state } = useContext(appStore);\n  const { soldOut } = state.app;\n  const { oneNFT } = state.price;\n\n  const { formatPrice } = useBuy();\n\n  return (\n    <section className=\"generate\" id=\"generate\">\n      <div className=\"generate__container\">\n        <div className=\"generate__information\">\n          <h2 className=\"generate__title\">$NEARCollectibles</h2>\n          <p className=\"generate__text\">\n            Releasing collection of 2,222 <strong>Cute Penguins</strong> to the $NEAR Blockchain\n          </p>\n          <p className=\"generate__text\">\n            NEARCollectibles are priced at a flat rate of {formatPrice(oneNFT)}{' '}\n            NEAR.\n          </p>\n          <h3 className=\"generate__title\">Pre-Sale Limit 3</h3>\n        </div>\n\n        <div className=\"generate__block\">\n          {soldOut ? <GenerateSoldOut /> : <GenerateBlock />}\n\n          <picture>\n            <source srcSet=\"./images/generate-penguins.webp 2x, ./images/generate-penguins.webp 1x\" />\n            <img\n              className={`generate__img ${\n                soldOut ? 'generate__img-sold-out' : ''\n              }`}\n              src=\"./images/generate-penguins.webp\"\n              alt=\"generate misfits\"\n            />\n          </picture>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Generate;\n","import React from 'react';\nimport Generate from '../../components/Generate';\n\nconst Home = () => (\n  <div className=\"home\">\n    <Generate />\n  </div>\n);\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport useBuy from '../../hooks/useBuy';\n\nconst Price = ({ price, className }) => {\n  const { formatPrice } = useBuy();\n  return (\n    <div className=\"price\">\n      <span className=\"price__near\">Ⓝ&nbsp;</span>\n      <span className={`price__count ${className}`}>{formatPrice(price)}</span>\n    </div>\n  );\n};\n\nPrice.propTypes = {\n  price: PropTypes.number,\n  className: PropTypes.string,\n};\n\nexport default Price;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GenerateCountBtn from '../../GenerateCountBtn';\nimport Price from '../../Price';\n\nconst CountAndPrice = ({\n  activeCount,\n  handleNumberClick,\n  showAnimation,\n  price,\n  currentCount,\n}) => (\n  <>\n    <div className=\"buy-more__wrapper\">\n      <GenerateCountBtn\n        count={currentCount}\n        onClick={() => handleNumberClick(currentCount)}\n        isActive={activeCount === currentCount}\n        className=\"buy-more__count\"\n      />\n    </div>\n    <div className=\"buy-more__wrapperp\">\n    <Price\n      price={currentCount === 1 ? price.oneNFT : price.manyNFTS}\n      className={` ${activeCount === currentCount ? showAnimation : ''}`}\n    />\n    </div>\n  </>\n);\n\nCountAndPrice.propTypes = {\n  activeCount: PropTypes.number,\n  currentCount: PropTypes.number,\n  handleNumberClick: PropTypes.func,\n  showAnimation: PropTypes.string,\n  price: PropTypes.object,\n};\nexport default CountAndPrice;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport BuyMoreBtn from '../../BuyMoreBtn';\nimport useBuy from '../../../hooks/useBuy';\nimport CountAndPrice from './CountAndPrice';\n\nconst BuyMore = ({ isLinkDrop }) => {\n  const {\n    text,\n    count,\n    state,\n    showMessage,\n    showCountAnimation,\n    handleClick,\n    handleNumberClick,\n  } = useBuy(isLinkDrop);\n\n  const { price, app } = state;\n\n  const moreThenManyCount = app.tokensLeft >= app.manyCount;\n  const textForMessage = moreThenManyCount\n    ? `select ${app.oneCount} or ${app.manyCount} Cute Penguin Club`\n    : `select ${app.oneCount} Cute Penguin Club`;\n\n  return (\n    <div className=\"buy-more\">\n      <div className=\"buy-more__center\">\n      \n        <CountAndPrice\n          activeCount={count}\n          handleNumberClick={handleNumberClick}\n          showAnimation={showCountAnimation}\n          price={price}\n          currentCount={app.oneCount}\n        />\n        {showMessage && (\n          <div\n            className=\"buy-more__message\"\n            style={{\n              transform: `translateX(${\n                isLinkDrop || moreThenManyCount ? '0' : '-25px'\n              })`,\n            }}\n          >\n            {isLinkDrop ? 'select 1 link drop' : textForMessage}\n          </div>\n        )}\n        {isLinkDrop && (\n          <p className=\"buy-more__top-text\">\n            Share a mystery NFT for your friend\n          </p>\n        )}\n      </div>\n\n      <div className=\"buy-more__center\">\n        <BuyMoreBtn text={text} onClick={handleClick} />\n      </div>\n      <h2 className=\"buy-more__center\">Tokens Left {app.tokensLeft}</h2>\n      {/* Show this block only for NFT and only if tokens left more or equal manyCount ( 10 in our case ) */}\n    </div>\n  );\n};\n\nBuyMore.propTypes = {\n  isLinkDrop: PropTypes.bool,\n};\n\nBuyMore.defaultProps = {\n  isLinkDrop: false,\n};\n\nexport default memo(BuyMore);\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { appStore } from '../../state/app';\nimport BuyMoreBtn from '../BuyMoreBtn';\nimport BuyMore from './BuyMore';\nimport GenerateSoldOut from '../Generate/GenerateSoldOut';\n\nconst Buy = ({ soldOut }) => {\n  const linkDrop = true;\n\n  const { update } = useContext(appStore);\n\n  const modalOpen = () => update('app.modalOpen', true);\n\n  return (\n    <div className=\"buy\">\n      <div className=\"buy__data\">\n        {!soldOut ? (\n          <>\n            <BuyMore />\n            <BuyMore isLinkDrop={linkDrop} />\n            <BuyMoreBtn\n              text=\"Send an NFT\"\n              className=\"buy__nft\"\n              onClick={modalOpen}\n            />\n          </>\n        ) : (\n          <div className=\"buy__sold-out-wrapper\">\n            <picture>\n              <source srcSet=\"./images/generate-penguins.webp 2x, ./images/generate-penguins.webp 1x\" />\n              <img\n                className=\"buy__image\"\n                src=\"./images/generate-penguins.webp\"\n                alt=\"sold out background\"\n              />\n            </picture>\n            <GenerateSoldOut className=\"buy__sold-out\" />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nBuy.propTypes = {\n  soldOut: PropTypes.bool,\n};\n\nBuy.defaultProps = {\n  soldOut: false,\n};\n\nexport default Buy;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Buy from '../Buy/Buy';\nimport GenerateSoldOut from '../Generate/GenerateSoldOut';\n\nconst NoNfts = ({ soldOut }) => {\n  const { pathname } = useLocation();\n\n  return (\n    <div className=\"no-nfts\">\n      <div className=\"no-nfts__data\">\n        <div className=\"no-nfts__data-top\">\n          <div className=\"no-nfts__information\">\n            <p className=\"no-nfts__title\">\n              You don&#39;t have any{' '}\n              <span className=\"no-nfts__text-purpure\">\n                {pathname === '/link-drop' ? 'LinkDrops' : 'NFTs'}\n              </span>{' '}\n              yet\n            </p>\n            <p className=\"no-nfts__text\">\n              Buy your first <span className=\"no-nfts__text-purpure\">NFT</span>\n            </p>\n          </div>\n          <picture>\n            <source srcSet=\"./images/generate-penguins.webp 2x, ./images/generate-penguins.webp 1x\" />\n            <img\n              className=\"no-nfts__img\"\n              src=\"./images/generate-penguins.webp\"\n              alt=\"no nft background\"\n            />\n          </picture>\n        </div>\n        {soldOut ? <GenerateSoldOut className=\"no-nfts__sold-out\" /> : <Buy />}\n      </div>\n    </div>\n  );\n};\n\nNoNfts.propTypes = {\n  soldOut: PropTypes.bool,\n};\n\nNoNfts.defaultProps = {\n  soldOut: false,\n};\n\nexport default NoNfts;\n","export default __webpack_public_path__ + \"static/media/link-drop-background.7d06707f.svg\";","const useCopyToClipboard = () => {\n  const handleCopy = (link) => {\n    const el = document.createElement('textarea');\n    el.value = link;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n  };\n\n  return { handleCopy };\n};\n\nexport default useCopyToClipboard;\n","export default __webpack_public_path__ + \"static/media/copy-icon.8eb03ea1.svg\";","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ReactSVG } from 'react-svg';\nimport useCopyToClipboard from '../../../hooks/useCopyToClipboard';\nimport copyIcon from '../../../assets/images/copy-icon.svg';\n\nconst ShareableLink = ({ link }) => {\n  const { handleCopy } = useCopyToClipboard();\n  const [animation, setAnimation] = useState('');\n\n  return (\n    <button\n      className=\"shareable-link\"\n      type=\"button\"\n      onClick={() => {\n        handleCopy(link);\n        setTimeout(() => setAnimation('shareable-link__animation'), 0);\n        setTimeout(() => setAnimation(''), 1000);\n      }}\n    >\n      <p className=\"shareable-link__text\">{link} </p>\n      <ReactSVG className=\"shareable-link__icon\" src={copyIcon} />\n      <p className={`shareable-link__copied ${animation}`}>copied</p>\n    </button>\n  );\n};\n\nShareableLink.propTypes = {\n  link: PropTypes.string,\n};\n\nShareableLink.defaultProps = {\n  link: 'https://genc.win',\n};\n\nexport default ShareableLink;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ShareableInput = ({ text, onBlur, index }) => {\n  const [value, setValue] = useState(text);\n\n  const handleChange = (e) => setValue(e.target.value);\n\n  return (\n    <input\n      className=\"shareable-input\"\n      data-index={index}\n      onBlur={onBlur}\n      onChange={handleChange}\n      value={value}\n      placeholder=\"Enter text\"\n    />\n  );\n};\n\nShareableInput.propTypes = {\n  text: PropTypes.string,\n  onBlur: PropTypes.func,\n  index: PropTypes.number,\n};\n\nShareableInput.defaultProps = {\n  text: '',\n  onBlur: () => {},\n  index: undefined,\n};\n\nexport default ShareableInput;\n","/* eslint-disable  jsx-a11y/control-has-associated-label */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ShareableCircle = ({ activeLinkForShare, index, onClick }) => (\n  <button\n    type=\"button\"\n    onClick={() => onClick(index)}\n    className={`shareable-circle ${\n      index === activeLinkForShare ? 'shareable-circle__active' : ''\n    }`}\n  ></button>\n);\n\nShareableCircle.propTypes = {\n  activeLinkForShare: PropTypes.number,\n  index: PropTypes.number,\n  onClick: PropTypes.func,\n};\n\nexport default ShareableCircle;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SaveBtn = ({ linkDropArray }) => {\n  const [animation, setAnimation] = useState('');\n\n  const handleClick = () => {\n    setTimeout(() => setAnimation('save-btn__animation'), 0);\n    setTimeout(() => setAnimation(''), 1000);\n  };\n\n  // create correct href for saving linkdrop into file\n  const hrefSaveBtn = () => {\n    let href = 'data:attachment/text,';\n\n    const uri = linkDropArray\n      .map(\n        ({ link, text }, index) =>\n          `${index}: ${text ? `${text} : ` : ''} \\n${link}`,\n      )\n      .join('\\n\\n\\n');\n    href += encodeURI(uri);\n\n    return href;\n  };\n  return (\n    <a\n      href={hrefSaveBtn()}\n      className=\"save-btn\"\n      download=\"my-link-drops.txt\"\n      onClick={handleClick}\n      target=\"_blank\"\n    >\n      Save\n      <p className={`save-btn__saved ${animation}`}>saved</p>\n    </a>\n  );\n};\n\nSaveBtn.propTypes = {\n  linkDropArray: PropTypes.array,\n};\n\nSaveBtn.defaultProps = {\n  linkDropArray: [],\n};\n\nexport default SaveBtn;\n","import React, { useEffect, useContext, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { ReactSVG } from 'react-svg';\nimport { appStore } from '../../state/app';\nimport Buy from '../../components/Buy';\nimport NoNfts from '../../components/NoNfts/NoNfts';\nimport background from '../../assets/images/link-drop-background.svg';\nimport ShareableLink from './ShareableLink';\nimport ShareableInput from './ShareableInput';\nimport ShareableCircle from './ShareableCircle';\nimport SaveBtn from './SaveBtn/SaveBtn';\n\nconst LinkDrop = () => {\n  const history = useHistory();\n\n  const { state, update } = useContext(appStore);\n  const { app, account } = state;\n\n  const [linkDropArray, setLinkDropArray] = useState([...app.linkDropArray]);\n  const [activeIndex, setActiveIndex] = useState(0);\n\n // const { handleCopy } = useCopyToClipboard();\n\n  useEffect(() => {\n    if (app.linkDropArray.length) {\n      setLinkDropArray([...app.linkDropArray]);\n    }\n  }, [app.linkDropArray.length]);\n\n  useEffect(() => {\n    if (!localStorage.undefined_wallet_auth_key) {\n      history.push('/');\n    }\n  });\n\n  const handleBlur = (e) => {\n    const text = e.target.value;\n    const dataIndex = +e.target.dataset.index;\n\n    // update text for input\n    const updatedLinkDropArray = linkDropArray.map((item, index) =>\n      dataIndex === index ? { ...item, text } : item,\n    );\n\n    // update in state\n    setLinkDropArray(updatedLinkDropArray);\n\n    // update text in global state\n    update('app.linkDropArray', [...updatedLinkDropArray]);\n\n    // update in local storage for user\n    localStorage.setItem(\n      `linkDropArray:${account.accountId}`,\n      JSON.stringify([...updatedLinkDropArray]),\n    );\n  };\n\n  const handleCircleClick = (index) => setActiveIndex(index);\n\n  // copy to clipboard when share social links (instagram/wechat/descord)\n\n /* const handleShareSocialLinks = () => {\n    const activeText = linkDropArray[activeIndex]?.text;\n    const activeLink = linkDropArray[activeIndex]?.link;\n\n    const copyText = `${activeText}  ${activeLink}`;\n    handleCopy(copyText);\n  };\n*/\n  return linkDropArray.length ? (\n    <div className=\"link-drop\">\n      <div className=\"link-drop__data-wrapper\" id=\"share-nft\">\n        <ReactSVG src={background} className=\"link-drop__background\" />\n\n        <div className=\"link-drop__data\">\n          <header className=\"link-drop__header\">\n            <span className=\"link-drop__header-purpure\">Share</span> a mystery{' '}\n            <span className=\"link-drop__header-purpure\">NFT</span> with your\n            friend\n          </header>\n\n          <div className=\"link-drop__center\">\n            <div>\n              <ul className=\"link-drop__list\">\n                {linkDropArray.map((item, index) => (\n                  <li className=\"link-drop__item\" key={item.id}>\n                    <ShareableCircle\n                      activeLinkForShare={activeIndex}\n                      onClick={handleCircleClick}\n                      index={index}\n                    />\n                    <div className=\"link-drop__inputs\">\n                      <ShareableLink link={item.link} />\n                      <ShareableInput\n                        text={item.text}\n                        index={index}\n                        onBlur={handleBlur}\n                      />\n                    </div>\n                  </li>\n                ))}\n              </ul>\n              <div className=\"link-drop__save\">\n                <SaveBtn linkDropArray={linkDropArray} />\n              </div>\n            </div>\n            <picture>\n              <source srcSet=\"./images/misfits-big-2x.webp 2x, ./images/misfits-big.webp 1x\" />\n            </picture>\n          </div>\n        </div>\n      </div>\n\n      <Buy soldOut={app.soldOut} />\n    </div>\n  ) : (\n    <NoNfts soldOut={app.soldOut} />\n  );\n};\n\nexport default LinkDrop;\n","export default __webpack_public_path__ + \"static/media/rarity-common.c156c166.svg\";","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { ReactSVG } from 'react-svg';\nimport rarity from '../../assets/images/rarity-common.svg';\n\nconst NftItemInfo = ({ className, item, urlIpfs, info }) => {\n  const nftInfo = useRef();\n\n  useEffect(() => {\n    const { right } = nftInfo?.current?.getBoundingClientRect();\n\n    if (right > window.innerWidth) {\n      const width = window.innerWidth;\n      nftInfo.current.style.transform = `translateX(-${right - width + 50}px)`;\n    }\n  });\n\n  return (\n    <div ref={nftInfo} className={`nft-item-info  ${className || ''}`}>\n      <div className=\"nft-item-info__icon-wrapper\">\n        <div className=\"nft-item-info__image-wrapper\">\n          <img\n            className=\"nft-item-info__image\"\n            src={`${urlIpfs}/${item.media}`}\n            alt=\"misfit\"\n          />\n        </div>\n        <p className=\"nft-item-info__number\">\n          # {item?.title?.padStart(5, '0')}\n        </p>\n        <ReactSVG\n          className=\"nft-item-info__rarity\"\n          src={item.rarity || rarity}\n        />\n      </div>\n      <div className=\"nft-item-info__stats\">\n        <p>kind : {info?.kind || 'no data'}</p>\n        <p>seed : {info?.seed || 'no data'}</p>\n      </div>\n    </div>\n  );\n};\n\nNftItemInfo.propTypes = {\n  className: PropTypes.string,\n  item: PropTypes.object,\n  urlIpfs: PropTypes.string,\n  info: PropTypes.object,\n};\nexport default NftItemInfo;\n","export default __webpack_public_path__ + \"static/media/rarity-rare.355ec026.svg\";","export default __webpack_public_path__ + \"static/media/rarity-uncommon.df7f70d0.svg\";","export default __webpack_public_path__ + \"static/media/rarity-very-rare.681bd7e2.svg\";","export default __webpack_public_path__ + \"static/media/rarity-super-rare.383d07f3.svg\";","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Reveal = ({ handleClick, title }) => (\n  <div className=\"reveal__item\" onClick={handleClick}>\n    <div className=\"reveal__top\">\n      <picture>\n        <source srcSet=\"./images/reveal-2x.webp 2x, ./images/reveal.webp 1x\" />\n        <img className=\"reveal__image\" src=\"./images/reveal.png\" alt=\"reveal\" />\n      </picture>\n\n      <div className=\"reveal__question-sign\">\n        ?<span className=\"reveal__question-sign-big\">?</span>?\n      </div>\n      <div className=\"reveal__text-hover\">Reveal</div>\n    </div>\n    <div className=\"reveal__title\">\n      <span># {title.padStart(5, '0')}</span>\n      <div className=\"reveal__question-grey\">?</div>\n    </div>\n  </div>\n);\n\nReveal.propTypes = {\n  handleClick: PropTypes.func,\n  title: PropTypes.string,\n};\n\nReveal.defaultProps = {\n  handleClick: () => {},\n  title: '',\n};\n\nexport default Reveal;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { useState, useEffect } from 'react';\nimport { ReactSVG } from 'react-svg';\nimport PropTypes from 'prop-types';\nimport NftItemInfo from '../NftItemInfo';\nimport Normies from '../../assets/images/rarity-common.svg';\nimport Skellies from '../../assets/images/rarity-rare.svg';\nimport Zombies from '../../assets/images/rarity-uncommon.svg';\nimport Meerkats from '../../assets/images/rarity-very-rare.svg';\nimport Glitches from '../../assets/images/rarity-super-rare.svg';\nimport Reveal from '../../pages/MyNFTS/Reveal';\n\nconst rarity = {\n  Normies,\n  Skellies,\n  Zombies,\n  Meerkats,\n  Glitches,\n};\n\nconst NftItem = ({ item, onClick, isReveal, urlIpfs }) => {\n  const [reveal, setReveal] = useState(isReveal);\n  const [info, setInfo] = useState({});\n\n  useEffect(async () => {\n    try {\n      const response = await fetch(`${urlIpfs}/${item.reference}`);\n      const data = await response.json();\n\n      setInfo(data);\n    } catch (e) {\n      // eslint-disable-next-line\n      console.log(e);\n    }\n  }, []);\n\n  const handleClick = () => {\n    setReveal(true);\n    onClick({ [item.title]: true });\n  };\n\n  return (\n    <div className=\"nft-item\">\n      {reveal ? (\n        <div>\n          <img\n            className=\"nft-item__img\"\n            src={`${urlIpfs}/${item.media}`}\n            alt=\"misfit\"\n          />\n\n          <div className=\"nft-item__footer\">\n            <p className=\"nft-item__hash\"># {item?.title?.padStart(5, '0')}</p>\n            <ReactSVG src={rarity[info?.kind] || Normies} />\n          </div>\n\n          <NftItemInfo\n            className=\"nft-item__info\"\n            item={item}\n            urlIpfs={urlIpfs}\n            info={info}\n          />\n        </div>\n      ) : (\n        <Reveal title={item?.title} handleClick={handleClick} />\n      )}\n    </div>\n  );\n};\n\nNftItem.propTypes = {\n  item: PropTypes.object,\n  onClick: PropTypes.func,\n  isReveal: PropTypes.bool,\n  urlIpfs: PropTypes.string,\n};\n\nNftItem.defaultProps = {\n  item: {},\n  onClick: () => {},\n};\n\nexport default NftItem;\n","import React, { useContext } from 'react';\nimport NftItem from '../NftItem';\nimport { appStore } from '../../state/app';\n\nconst NftList = () => {\n  const { state, update } = useContext(appStore);\n  const { app } = state;\n\n  const handleClick = (revealMisfits) => {\n    const newRevealMisfits = { ...app.revealMisfits, ...revealMisfits };\n\n    update('app', { revealMisfits: newRevealMisfits });\n    localStorage.setItem('revealMisfits', JSON.stringify(newRevealMisfits));\n  };\n\n  return (\n    <div className=\"nfts-list\">\n      {app.misfitsArray.map((item) => (\n        <NftItem\n          key={item.token_id}\n          item={item.metadata}\n          isReveal={app.revealMisfits[item.token_id]}\n          urlIpfs={app.urlIpfs}\n          onClick={handleClick}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default NftList;\n","import React, { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport NftList from '../../components/NftList/NftList';\nimport NoNfts from '../../components/NoNfts/NoNfts';\nimport { appStore } from '../../state/app';\nimport Buy from '../../components/Buy';\n\nconst MyNFTS = () => {\n  const history = useHistory();\n\n  const { state } = useContext(appStore);\n  const { soldOut } = state.app;\n  const nftsCount = state.app.misfitsArray.length;\n\n  useEffect(() => {\n    if (!localStorage.undefined_wallet_auth_key) {\n      history.push('/');\n    }\n  });\n\n  return nftsCount ? (\n    <div className=\"my-nfts\">\n      <div className=\"my-nfts__data\">\n        <NftList />\n      </div>\n      <Buy soldOut={soldOut} />\n    </div>\n  ) : (\n    <NoNfts soldOut={soldOut} />\n  );\n};\n\nexport default MyNFTS;\n","import React from 'react';\nimport Home from './pages/Home';\nimport LinkDrop from './pages/LinkDrop';\nimport MyNFTS from './pages/MyNFTS';\n\nconst routes = [\n  {\n    path: '/',\n    key: 'ROOT',\n    exact: true,\n    component: () => <Home />,\n  },\n  {\n    path: '/my-nfts',\n    key: 'MY_NFTS',\n    component: () => <MyNFTS />,\n  },\n  {\n    path: '/link-drop',\n    key: 'LINK_DROP',\n    component: () => <LinkDrop />,\n  },\n];\n\nexport default routes;\n","import React, { useEffect, useContext } from 'react';\nimport { appStore, onAppMount } from './state/app';\nimport RenderRoutes from './components/RenderRoutes';\nimport Layout from './layouts/Layout';\nimport routes from './routes';\nimport './styles/Main.scss';\n\nconst Main = () => {\n  const { dispatch } = useContext(appStore);\n\n  const onMount = () => {\n    dispatch(onAppMount());\n  };\n\n  useEffect(onMount, []);\n  return (\n    <Layout>\n      <RenderRoutes routes={routes} />\n    </Layout>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport Main from './Main';\nimport { AppProvider } from './state/app';\n\nReactDOM.render(\n  <AppProvider>\n    <BrowserRouter>\n      <Main />\n    </BrowserRouter>\n  </AppProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}